{"version":3,"sources":["format_card.js"],"names":["define","$","Ajax","Notification","common","ordering","init","PROMISES","courseid","sectionid","activityid","call","methodname","args","document","ready","is","css","opacity","visibility","animate","on","data","section","activity","this","selector","done","response","type","closest","removeClass","addClass","fail","exception","height","hide","M","course","format","get_config","container_node","container_class","section_node","section_class","swap_sections","Y","node1","node2","CSS","sectionlist","Node","all","get_section_selector","item","one","swap","process_sections","sectionfrom","sectionto","SELECTORS","action","temp","ele","str","stridx","newstr","i","content","create","sectiontitles","setHTML","getAttribute","lastIndexOf","substr","setAttribute"],"mappings":"AAuBAA,OAAO,CACH,SACA,YACA,oBACA,4BACA,0BACD,SAASC,EAAGC,EAAMC,EAAcC,EAAQC,GA6IvC,MAAO,CACHC,KA5IJ,WAMI,IAAIC,EAQsB,SAASC,EAAUC,EAAWC,GAChD,OAAOR,EAAKS,KAAK,CAAC,CACdC,WAAY,0CACZC,KAAM,CACFL,SAAUA,EACVC,UAAWA,EACXC,WAAYA,MAEhB,IAKZT,EAAEa,UAAUC,MAAM,WACVd,EAAE,QAAQe,GAAG,aACbX,EAASC,SAIjBL,EAAE,gBAAgBgB,IAAI,CAAEC,QAAS,EAAKC,WAAY,YAAcC,QAAQ,CAAEF,QAAS,GAAQ,IAAK,SAGhGjB,EAAE,wFAAwFoB,GAAG,QAAS,WAClG,IAAIb,EAAWP,EAAE,mBAAmBqB,KAAK,YACrCC,EAAUtB,EAAE,oBAAoBqB,KAAK,aACrCE,EAAWvB,EAAEwB,MAAMH,KAAK,cACxBI,EAAWzB,EAAEwB,MACjBlB,EAA8BC,EAAUe,EAASC,GAChDG,KAAK,SAASC,GACU,OAAjBA,EAASC,KACT5B,EAAEyB,GAAUI,QAAQ,iBAAiBC,YAAY,gBAAgBC,SAAS,gBAE1E/B,EAAEyB,GAAUI,QAAQ,iBAAiBE,SAAS,gBAAgBD,YAAY,kBAGjFE,KAAK9B,EAAa+B,aAIHjC,EAAE,kCAAkCkC,SACpC,KAChBlC,EAAE,wCAAwCmC,OAG9CC,EAAEC,OAASD,EAAEC,QAAU,GAEvBD,EAAEC,OAAOC,OAASF,EAAEC,OAAOC,QAAU,GAErCF,EAAEC,OAAOC,OAAOC,WAAa,WACzB,MAAO,CACHC,eAAgB,MAChBC,gBAAiB,QACjBC,aAAc,KACdC,cAAe,YAYvBP,EAAEC,OAAOC,OAAOM,cAAgB,SAASC,EAAGC,EAAOC,GAC/C,IAAIC,EACe,iBADfA,EAEiB,oBAGjBC,EAAcJ,EAAEK,KAAKC,IAAI,IAAMH,EAAoB,IAAMZ,EAAEC,OAAOC,OAAOc,qBAAqBP,IAE9FI,EAAYI,KAAKP,GAAOQ,IAAI,IAAIN,IAChCC,EAAYI,KAAKP,GAAOQ,IAAI,IAAIN,GAAqBO,KAAKN,EAAYI,KAAKN,GAAOO,IAAI,IAAIN,KAalGZ,EAAEC,OAAOC,OAAOkB,iBAAmB,SAASX,EAAGI,EAAatB,EAAU8B,EAAaC,GAC/E,IAAIV,EACa,cAEjBW,EACqB,8BAGrB,GAAuB,QAAnBhC,EAASiC,OAAkB,CAE3B,GAAIH,EAAcC,EAAW,CACzB,IAAIG,EAAOH,EACXA,EAAYD,EACZA,EAAcI,EAMlB,IAFA,IAAIC,EAAKC,EAAKC,EAAQC,EAEbC,EAAIT,EAAaS,GAAKR,EAAWQ,IAAK,CAE3C,IAAIC,EAAUtB,EAAEK,KAAKkB,OAAO,SAAWzC,EAAS0C,cAAcH,GAAK,WACnEjB,EAAYI,KAAKa,GAAGf,IAAI,IAAMH,GAAiBsB,QAAQH,GAIvDH,GADAD,GADAD,EAAMb,EAAYI,KAAKa,GAAGZ,IAAIK,IACpBY,aAAa,QACVC,YAAY,KACzBP,EAASF,EAAIU,OAAO,EAAGT,EAAS,GAAKE,EACrCJ,EAAIY,aAAa,MAAOT,GACxBH,EAAIY,aAAa,QAAST,MAKtC9D,EAAOE","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Enhancements to Cards components for easy course accessibility.\r\n *\r\n * @module     format/remuiformat\r\n * @copyright  WisdmLabs\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine([\r\n    'jquery',\r\n    'core/ajax',\r\n    'core/notification',\r\n    'format_remuiformat/common',\r\n    './format_card_ordering'\r\n], function($, Ajax, Notification, common, ordering) {\r\n\r\n    function init() {\r\n\r\n        /**\r\n         * Ajax promises\r\n         * @type {Object}\r\n         */\r\n        var PROMISES = {\r\n\r\n            /**\r\n             * Toggle activity view type. Either row or column\r\n             * @param {integer} courseid   Current course id\r\n             * @param {integer} sectionid  Current Section id\r\n             * @param {integer} activityid Selected activity id\r\n             */\r\n            SHOW_ACTIVITY_IN_ROW: function(courseid, sectionid, activityid) {\r\n                return Ajax.call([{\r\n                    methodname: \"format_remuiformat_show_activity_in_row\",\r\n                    args: {\r\n                        courseid: courseid,\r\n                        sectionid: sectionid,\r\n                        activityid: activityid\r\n                    }\r\n                }])[0];\r\n            }\r\n        }\r\n\r\n        var cardminHeight = 200;\r\n        $(document).ready(function() {\r\n            if ($('body').is('.editing')) {\r\n                ordering.init();\r\n            }\r\n        });\r\n\r\n        $('.single-card').css({ opacity: 0.0, visibility: \"visible\", }).animate({ opacity: 1.0, }, 600, \"swing\");\r\n\r\n        // Call AJAX to set activity layout (Row or Card).\r\n        $('.remui-format-card.single-section-format .activity-cards .actions .toggle-row-column').on('click', function() {\r\n            var courseid = $('[data-courseid]').data('courseid');\r\n            var section = $('[data-sectionid]').data('sectionid');\r\n            var activity = $(this).data('activityid');\r\n            var selector = $(this);\r\n            PROMISES.SHOW_ACTIVITY_IN_ROW(courseid, section, activity)\r\n            .done(function(response) {\r\n                if (response.type == 'row') {\r\n                    $(selector).closest('.col-activity').removeClass('col-activity').addClass('row-activity');\r\n                } else {\r\n                    $(selector).closest('.row-activity').addClass('col-activity').removeClass('row-activity');\r\n                }\r\n            })\r\n            .fail(Notification.exception);\r\n        });\r\n\r\n        // ... + Show full summary label show conditionally.\r\n        var summaryheight = $('.read-more-target .no-overflow').height();\r\n        if (summaryheight < 110) {\r\n            $('.read-more-trigger, .fadeout-summary').hide();\r\n        }\r\n\r\n        M.course = M.course || {};\r\n\r\n        M.course.format = M.course.format || {};\r\n\r\n        M.course.format.get_config = function() {\r\n            return {\r\n                container_node: 'div',\r\n                container_class: 'cards',\r\n                section_node: 'li',\r\n                section_class: 'section'\r\n            };\r\n        };\r\n\r\n        /**\r\n         * Swap section\r\n         *\r\n         * @param {YUI} Y YUI3 instance\r\n         * @param {string} node1 node to swap to\r\n         * @param {string} node2 node to swap with\r\n         * @return {NodeList} section list\r\n         */\r\n        M.course.format.swap_sections = function(Y, node1, node2) {\r\n            var CSS = {\r\n                COURSECONTENT: 'course-content',\r\n                SECTIONADDMENUS: 'section_add_menus'\r\n            };\r\n\r\n            var sectionlist = Y.Node.all('.' + CSS.COURSECONTENT + ' ' + M.course.format.get_section_selector(Y));\r\n            // Swap the non-ajax menus, noting these are not always present (depends on theme and user prefs).\r\n            if (sectionlist.item(node1).one('.'+CSS.SECTIONADDMENUS)) {\r\n                sectionlist.item(node1).one('.'+CSS.SECTIONADDMENUS).swap(sectionlist.item(node2).one('.'+CSS.SECTIONADDMENUS));\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Process sections after ajax response\r\n         *\r\n         * @param {YUI} Y YUI3 instance\r\n         * @param {array} response ajax response\r\n         * @param {string} sectionfrom first affected section\r\n         * @param {string} sectionto last affected section\r\n         * @return void\r\n         */\r\n        M.course.format.process_sections = function(Y, sectionlist, response, sectionfrom, sectionto) {\r\n            var CSS = {\r\n                SECTIONNAME: 'sectionname'\r\n            },\r\n            SELECTORS = {\r\n                SECTIONLEFTSIDE: '.left .section-handle .icon'\r\n            };\r\n\r\n            if (response.action == 'move') {\r\n                // If moving up swap around 'sectionfrom' and 'sectionto' so the that loop operates.\r\n                if (sectionfrom > sectionto) {\r\n                    var temp = sectionto;\r\n                    sectionto = sectionfrom;\r\n                    sectionfrom = temp;\r\n                }\r\n\r\n                // Update titles and move icons in all affected sections.\r\n                var ele, str, stridx, newstr;\r\n\r\n                for (var i = sectionfrom; i <= sectionto; i++) {\r\n                    // Update section title.\r\n                    var content = Y.Node.create('<span>' + response.sectiontitles[i] + '</span>');\r\n                    sectionlist.item(i).all('.' + CSS.SECTIONNAME).setHTML(content);\r\n                    // Update move icon.\r\n                    ele = sectionlist.item(i).one(SELECTORS.SECTIONLEFTSIDE);\r\n                    str = ele.getAttribute('alt');\r\n                    stridx = str.lastIndexOf(' ');\r\n                    newstr = str.substr(0, stridx + 1) + i;\r\n                    ele.setAttribute('alt', newstr);\r\n                    ele.setAttribute('title', newstr); // For FireFox as 'alt' is not refreshed.\r\n                }\r\n            }\r\n        };\r\n\r\n        common.init();\r\n    }\r\n    // Must return the init function.\r\n\r\n    return {\r\n        init: init\r\n    };\r\n});\r\n"],"file":"format_card.min.js"}