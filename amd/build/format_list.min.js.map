{"version":3,"sources":["format_list.js"],"names":["define","$","common","init","addClass","css","opacity","visibility","animate","M","course","format","get_config","container_node","container_class","section_node","section_class","swap_sections","Y","node1","node2","CSS","sectionlist","Node","all","get_section_selector","item","one","swap","process_sections","response","sectionfrom","sectionto","SELECTORS","action","temp","ele","str","stridx","newstr","i","content","create","sectiontitles","setHTML","getAttribute","lastIndexOf","substr","setAttribute"],"mappings":"AAuBCA,OAAO,CAAC,SAAU,6BAA8B,SAASC,EAAGC,GAmGzD,MAAO,CACHC,KAlGJ,WAEIF,EAAE,8DAA8DG,SAAS,mBACzEH,EAAE,wBAAwBI,IAAI,CAACC,QAAS,EAAKC,WAAY,YAAaC,QAAQ,CAACF,QAAS,GAAO,IAAK,SACpGL,EAAE,gBAAgBI,IAAI,CAACC,QAAS,EAAKC,WAAY,YAAaC,QAAQ,CAACF,QAAS,GAAO,IAAK,SAE5FG,EAAEC,OAASD,EAAEC,QAAU,GAEvBD,EAAEC,OAAOC,OAASF,EAAEC,OAAOC,QAAU,GAcrCF,EAAEC,OAAOC,OAAOC,WAAa,WACzB,MAAO,CACHC,eAAgB,KAChBC,gBAAiB,oBACjBC,aAAc,KACdC,cAAe,YAYvBP,EAAEC,OAAOC,OAAOM,cAAgB,SAASC,EAAGC,EAAOC,GAC/C,IAAIC,EACe,iBADfA,EAEiB,oBAGjBC,EAAcJ,EAAEK,KAAKC,IAAI,IAAMH,EAAoB,IAAMZ,EAAEC,OAAOC,OAAOc,qBAAqBP,IAElGI,EAAYI,KAAKP,GAAOQ,IAAI,IAAMN,GAAqBO,KAAKN,EAAYI,KAAKN,GAAOO,IAAI,IAAMN,KAYlGZ,EAAEC,OAAOC,OAAOkB,iBAAmB,SAASX,EAAGI,EAAaQ,EAAUC,EAAaC,GAC/E,IAAIX,EACa,cAEjBY,EACqB,8BAErB,GAAuB,QAAnBH,EAASI,OAAkB,CAE3B,GAAIH,EAAcC,EAAW,CACzB,IAAIG,EAAOH,EACXA,EAAYD,EACZA,EAAcI,EAMlB,IAFA,IAAIC,EAAKC,EAAKC,EAAQC,EAEbC,EAAIT,EAAaS,GAAKR,EAAWQ,IAAK,CAE3C,IAAIC,EAAUvB,EAAEK,KAAKmB,OAAOZ,EAASa,cAAcH,IACnDlB,EAAYI,KAAKc,GAAGhB,IAAI,MAAQH,GAAiBuB,QAAQH,GAIzDH,GADAD,GADAD,EAAMd,EAAYI,KAAKc,GAAGb,IAAIM,IACpBY,aAAa,QACVC,YAAY,KACzBP,EAASF,EAAIU,OAAO,EAAGT,EAAS,GAAKE,EACrCJ,EAAIY,aAAa,MAAOT,GACxBH,EAAIY,aAAa,QAAST,MAKtCrC,EAAOC","sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Enhancements to Lists components for easy course accessibility.\r\n *\r\n * @module     format/remuiformat\r\n * @copyright  WisdmLabs\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n define(['jquery', 'format_remuiformat/common'], function($, common) {\r\n\r\n    function init() {\r\n\r\n        $('#page-course-view-remuiformat span.section-modchooser-link').addClass(\"btn btn-primary\");\r\n        $('.general-single-card').css({opacity: 0.0, visibility: \"visible\",}).animate({opacity: 1.0,}, 200, \"swing\");\r\n        $('.single-card').css({opacity: 0.0, visibility: \"visible\",}).animate({opacity: 1.0,}, 400, \"swing\");\r\n\r\n        M.course = M.course || {};\r\n\r\n        M.course.format = M.course.format || {};\r\n\r\n        /**\r\n         * Get sections config for this format\r\n         *\r\n         * The section structure is:\r\n         * <ul class=\"remui-format-list\">\r\n         *  <li class=\"section\">...</li>\r\n         *  <li class=\"section\">...</li>\r\n         *   ...\r\n         * </ul>\r\n         *\r\n         * @return {object} section list configuration\r\n         */\r\n        M.course.format.get_config = function() {\r\n            return {\r\n                container_node: 'ul',\r\n                container_class: 'remui-format-list',\r\n                section_node: 'li',\r\n                section_class: 'section'\r\n            };\r\n        };\r\n\r\n        /**\r\n         * Swap section\r\n         *\r\n         * @param {YUI} Y YUI3 instance\r\n         * @param {string} node1 node to swap to\r\n         * @param {string} node2 node to swap with\r\n         * @return {NodeList} section list\r\n         */\r\n        M.course.format.swap_sections = function(Y, node1, node2) {\r\n            var CSS = {\r\n                COURSECONTENT: 'course-content',\r\n                SECTIONADDMENUS: 'section_add_menus'\r\n            };\r\n\r\n            var sectionlist = Y.Node.all('.' + CSS.COURSECONTENT + ' ' + M.course.format.get_section_selector(Y));\r\n            // Swap menus.\r\n            sectionlist.item(node1).one('.' + CSS.SECTIONADDMENUS).swap(sectionlist.item(node2).one('.' + CSS.SECTIONADDMENUS));\r\n        };\r\n\r\n        /**\r\n         * Process sections after ajax response\r\n         *\r\n         * @param {YUI} Y YUI3 instance\r\n         * @param {array} response ajax response\r\n         * @param {string} sectionfrom first affected section\r\n         * @param {string} sectionto last affected section\r\n         * @return void\r\n         */\r\n        M.course.format.process_sections = function(Y, sectionlist, response, sectionfrom, sectionto) {\r\n            var CSS = {\r\n                SECTIONNAME: 'sectionname'\r\n            },\r\n            SELECTORS = {\r\n                SECTIONLEFTSIDE: '.left .section-handle .icon'\r\n            };\r\n            if (response.action == 'move') {\r\n                // If moving up swap around 'sectionfrom' and 'sectionto' so the that loop operates.\r\n                if (sectionfrom > sectionto) {\r\n                    var temp = sectionto;\r\n                    sectionto = sectionfrom;\r\n                    sectionfrom = temp;\r\n                }\r\n\r\n                // Update titles and move icons in all affected sections.\r\n                var ele, str, stridx, newstr;\r\n\r\n                for (var i = sectionfrom; i <= sectionto; i++) {\r\n                    // Update section title.\r\n                    var content = Y.Node.create(response.sectiontitles[i]);\r\n                    sectionlist.item(i).all('h4.' + CSS.SECTIONNAME).setHTML(content);\r\n                    // Update move icon.\r\n                    ele = sectionlist.item(i).one(SELECTORS.SECTIONLEFTSIDE);\r\n                    str = ele.getAttribute('alt');\r\n                    stridx = str.lastIndexOf(' ');\r\n                    newstr = str.substr(0, stridx + 1) + i;\r\n                    ele.setAttribute('alt', newstr);\r\n                    ele.setAttribute('title', newstr); // For FireFox as 'alt' is not refreshed.\r\n                }\r\n            }\r\n        };\r\n\r\n        common.init();\r\n    }\r\n\r\n    // Must return the init function.\r\n\r\n    return {\r\n        init: init\r\n        };\r\n });"],"file":"format_list.min.js"}